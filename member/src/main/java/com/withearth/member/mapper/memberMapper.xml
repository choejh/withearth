<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.withearth.member.dao.MemberDAO">

<!-- 로그인할때 사용2) Member타입의 resultMap 왜써야 하는건지 모르겠어요-->
<!-- 변수와 컬럼이름이 일치하지 않을때 사용하는 것! -->
<resultMap id="memberResult"
			type="com.withearth.member.domain.Member">
	<id column="idx" property="idx"/>
	<result column="idx" property="idx"/>
	<result column="id" property="id"/>
	<result column="pw" property="pw"/>
	<result column="name" property="name"/>
	<result column="photo" property="photo"/>
</resultMap>

<!-- 회원가입 -->

<insert id="insertMember"
	parameterType="com.withearth.member.domain.Member"
	useGeneratedKeys="true"
	keyProperty="idx"
	>
<if test="photo != null and logintype=='email'">
INSERT INTO wuser (id,pw,name,photo,logintype,code) 
VALUES( #{id}, #{pw}, #{name}, #{photo}, #{logintype}, #{code})
</if>
<if test="photo == null and logintype=='email'">
INSERT INTO wuser (id,pw,name,logintype,code) 
VALUES( #{id}, #{pw}, #{name}, #{logintype}, #{code} )
</if>
<if test="logintype=='kakao'">
INSERT INTO wuser (id,name,photo,logintype,verify) 
VALUES( #{id}, #{name}, #{photo}, #{logintype}, #{verify} )
</if>
<if test="logintype=='google'">
INSERT INTO wuser (id,name,photo,logintype,verify) 
VALUES( #{id}, #{name}, #{photo}, #{logintype}, #{verify} )
</if>
<if test="logintype=='naver'">
INSERT INTO wuser (id,name,photo,logintype,verify) 
VALUES( #{id}, #{name}, #{photo}, #{logintype}, #{verify} )
</if>
</insert>

<!-- 로그인 -->
<select id="selectLogin"
		resultMap="memberResult"> <!-- id와 매핑된다. -->

select * from wuser where id= #{param1}
</select>

<!-- 아이디 중복체크 / 이메일 보내기-->
<select id="selectMemberByIdCount" resultType="int">
	select count(*) from wuser where id = #{id}
</select>

<!-- 아이디 패스워드 일치여부확인  (안쓰고있음)-->
<select id="selectMemberByIdPwCount" resultType="int">
	select count(*) from wuser where id= #{param1} and pw=#{param2}
</select>

<!-- 아이디/패스워드 일치 + verify='N'인 경우 -->
<select id="selectMemberByIdPwVerifyCount" resultType="int">
	select count(*) from wuser where id= #{param1} and pw=#{param2} and verify='N'
</select>
<!-- 이메일 인증 -->
	<select id="selectMemberByIdxVerify"
					resultType="int"
	>
		select count(*) from wuser where idx=#{idx} and verify='Y'
	</select>
	
	<update id="updateMemberVerify">
		update wuser set verify='Y' where idx=#{param1} and code=#{param2}
	</update>
	
<!-- 임시 비밀번호 설정 -->	
<update id="updateMembertemporaryPW"
		parameterType="com.withearth.member.domain.TemporaryPw">
		update wuser set pw=#{tpw} where id=#{id}
</update>

<!-- 카카오 이메일 중복 인증 -->
<select id="kakaoRegCheckCount"
					resultType="int">
		select count(*) from wuser where id=#{id} and logintype='kakao'
</select>

<!-- 카카오 로그인 인증 -->
<select id="kakaoSelectLogin" resultMap="memberResult"> 
		select * from wuser where id=#{id}
</select>

<!-- 구글 이메일 중복 인증 -->
<select id="googleRegCheckCount"
					resultType="int">
		select count(*) from wuser where id=#{id} and logintype='google'
</select>

<!-- 구글 로그인 인증 -->
<select id="googleSelectLogin" resultMap="memberResult"> 
		select * from wuser where id=#{id}
</select>

<select id="emailUserCheckCount"
					resultType="int">
		select count(*) from wuser where id=#{id} and logintype='email'
</select>


<!-- 아이디만 가져와서 암호화된 비밀번호와 비교 -->
<select id="compareSecretpw" resultMap="memberResult"> 
		select * from wuser where id=#{id}
</select>

<!-- 혹시 탈퇴한 회원이세요? -->
<select id="leaveuserselect" resultType="int">
		select count(*) from wuser where id=#{id} and verify='D'
</select>

<!-- 네이버 이메일 중복 인증 -->
<select id="naverRegCheckCount"
					resultType="int">
		select count(*) from wuser where id=#{id} and logintype='naver'
</select>

<!-- 네이버 로그인 인증 -->
<select id="naverSelectLogin" resultMap="memberResult"> 
		select * from wuser where id=#{id}
</select>

<!-- 회원정보 수정 (파일) -->

<update id="updatePhoto"
		parameterType="com.withearth.member.domain.Member">
		update wuser set photo=#{photo} where id=#{id}
</update>
<!-- 회원정보 수정 (별명) -->
<update id="updateName"
		parameterType="com.withearth.member.domain.Member">
		update wuser set name=#{name} where idx=#{idx}
</update>
<!-- 회원정보 수정 (비밀번호) -->
<update id="updatePw"
		parameterType="com.withearth.member.domain.Member">
		update wuser set pw=#{pw} where id=#{id}
</update>

<!-- 누구의 idx인가 -->
<select id="selectLoginIdx"
		resultMap="memberResult"> <!-- id와 매핑된다. -->

select * from wuser where idx= #{idx}
</select>




<!-- 게시판 기능 -->

<!-- 글 등록 -->
<insert id="insertWrite"
		parameterType="com.withearth.member.domain.WriteDTO"
		useGeneratedKeys="true"
		keyProperty="idx"
		>
	INSERT INTO tboard (title,contents,writer) 
	VALUES (#{subject},#{contents},#{username})

</insert>

<select id="printList" resultType="com.withearth.member.domain.ListVO">
	SELECT IDX,TITLE,CONTENTS,INSERTTIME,VIEWCNT,WRITER
	FROM tboard
	ORDER BY IDX desc 
	limit 10
</select>

<!-- 전체 글 개수 가져오기 -->
 <select id="getBoardListCnt" resultType="int">
	SELECT count(*) as listCnt FROM tboard
</select>

<!-- 게시물 조회 -->
<select id="getDetailedView" resultType="com.withearth.member.domain.ListVO">
	SELECT IDX,TITLE,CONTENTS,INSERTTIME,VIEWCNT,WRITER
	FROM tboard
	Where idx = #{idx}
</select>

<update id="modify" parameterType="com.withearth.member.domain.ListVO">
	UPDATE tboard
	SET title=#{title},
		contents=#{contents},
		writer=#{writer}
	WHERE idx=#{idx}
	
</update>

<delete id="deleteList" parameterType="int">
	DELETE
	FROM tboard
	WHERE idx=#{idx}
</delete>

<!--게시물 목록+페이징-->
<select id="listPage" parameterType="hashMap" resultType="com.withearth.member.domain.ListVO">
	SELECT IDX,TITLE,CONTENTS,INSERTTIME,VIEWCNT,WRITER
	FROM tboard
	ORDER BY idx desc
	limit #{displayPost}, #{postNum}
</select>

</mapper>